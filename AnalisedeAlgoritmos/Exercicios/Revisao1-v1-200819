/*
Resolucao do problema desta atividade: https://www.urionlinejudge.com.br/judge/pt/problems/view/1110
*/

#include <iostream>
#include <cstdio> 
#include <vector> 
using namespace std;   

vector<int> baralho; 
vector<int> novoVet;   

void apagar();

void popular(int n){ 
	for (int i=1;i<=n;i++){ 	
	baralho.push_back(i); 	
} 
}

void apagar(){
	baralho.erase(baralho.begin(),baralho.end());
	novoVet.erase(novoVet.begin(),novoVet.end());
}
  
void novoV(int val){ 
	novoVet.push_back(val);
 }  

int movimentar(int n){ 	
	popular(n); 	
	int i,resp; 	
	for(i=0;i<n-1;i++){ 
		novoV(baralho[i]); 
		baralho.push_back(baralho[i+1]); 		
		baralho.erase(baralho.begin(),baralho.begin()+1); 	
	} 	
	return resp = baralho[i]; 
}  

 int main(){ 
 
 int opc=0;
 	do{
 		int resp;
 		apagar();
 		
 		cout<<"Digite o num. de cartas : ";
	 	cin>>opc;
	 	opc > 0 ? resp=movimentar(opc):resp=0;
		cout<<"Sobrou a carta: "<<resp<<"\n";
		cout<<"Vetor das cartas que sairam :";
	 	for(int i=0;i<novoVet.size();i++)cout<<novoVet[i];
	 	cout<<"\n";
 	}while(opc!=-1);
 }
