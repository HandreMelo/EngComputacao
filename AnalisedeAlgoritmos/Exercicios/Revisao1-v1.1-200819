/*
Resolucao do problema desta atividade: https://www.urionlinejudge.com.br/judge/pt/problems/view/1110
*/

#include <iostream>
#include <cstdio> 
#include <vector> 
using namespace std;   

struct Casos{
	vector<int> novoVet;
	int sobra;
}caso;

vector<int> baralho; 

void popular(int n){ 
	for (int i=1;i<=n;i++) baralho.push_back(i);
}

void apagar(){
	baralho.erase(baralho.begin(),baralho.end());
	caso.novoVet.erase(caso.novoVet.begin(),caso.novoVet.end());
}

int movimentar(int n){ 	
	popular(n); 	
	int i;
	for(i=0;i<n-1;i++){ 
		caso.novoVet.push_back(baralho[i]);
		baralho.push_back(baralho[i+1]); 		
		baralho.erase(baralho.begin(),baralho.begin()+1); 	
	} 	
	if (n>1) return baralho[i];
	else return 0;
	
}  

 int main(){ 
 	vector<Casos> vCasos;
 	vector<int> vOpc;
 	int opc,resp;
 	int count=0;

	do{
		cout<<"Digite o num. de cartas : ";
 		cin>>opc;
 		vOpc.push_back(opc);
 		
 	}while(opc!=0);
 	
 	for (int i=0;i<vOpc.size()-1;i++){
 		caso.sobra=movimentar(vOpc[i]);
 		vCasos.push_back(caso);
 		caso.novoVet.clear();
 		caso.sobra=0;
 		baralho.clear();
 	}
 	for(int i=0;i<vCasos.size();i++){
		int j=0;
		cout<<"Discarded cards: ";
		for(j;j<vCasos[i].novoVet.size();j++){
			 cout<<vCasos[i].novoVet[j];
			 if (j<vCasos[i].novoVet.size()-1)cout<<", ";
			 else cout<<"\n";
			}
		cout<<"Remaining card: "<<vCasos[i].sobra;
	 	cout<<"\n";	
	}
 }
